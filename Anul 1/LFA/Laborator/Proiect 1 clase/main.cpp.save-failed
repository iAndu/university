#include <iostream>
#include <fstream>
#include <vector>
#include <unordered_set>
#include <unordered_map>
#include <cstring>
using namespace std;

#ifndef EXPRESSION
#define EXPRESSION
class Expression {
    int current_state, next_state;
    char e_event;

public:
    Expression(int c_state, int n_state, char event) {
        this->current_state = c_state;
        this->next_state = n_state;
        this->e_event = event;
    }

    int current() { return this->current_state; }
    int next() { return this->next_state; }
    char event() { return this->e_event; }
};
#endif // EXPRESSION

#ifndef LANG
#define LANG
class Language {
    int starting_state = 0;
    unordered_set<int> final_states;
    vector<Expression> expressions;
    vector<char> events;
    int** transition;
    int nr_states = 0, nr_events = 0;

public:
    Language(vector<Expression> exp, int starting_state, unordered_set<int> final_states) {
        this->expressions = exp;
        this->starting_state = starting_state;
        this->final_states = final_states;


    }
};
#endif // LANG

int main()
{
    cout << "Hello world!" << endl;
    return 0;
}
